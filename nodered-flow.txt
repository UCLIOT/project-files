[{"id":"c3157995.4527e8","type":"ibmiot","z":"d6ce74ca.a72a38","name":"raspberry"},{"id":"22b64a01.646d06","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC4","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC4. \n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.487714,-0.168917;51.487262,-0.167936&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.KC4gas = {\"NO2KC4\": parseInt(no2), \"TSGAS\": ts};\n        return msg;\n    }\n}\n\n","outputs":"1","noerr":0,"x":531,"y":757,"wires":[["7137c9a9.5634e8"]]},{"id":"70c1ea0f.ddacd4","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC4","method":"use","ret":"txt","url":"","x":351,"y":755,"wires":[["22b64a01.646d06"]]},{"id":"4928dc1f.bc6dd4","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC5","method":"use","ret":"txt","url":"","x":350,"y":698,"wires":[["d40a0f26.9e39a"]]},{"id":"d40a0f26.9e39a","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC5","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC5. \n*/\n\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.492384%2C%20-0.193234%3B51.491912%2C%20-0.192263&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.KC5gas = {\"NO2KC5\": parseInt(no2), \"TSGAS\": ts};\n        return msg;\n    }\n}\n","outputs":"1","noerr":0,"x":529,"y":698,"wires":[["71de1ae8.7c08d4"]]},{"id":"79bc2d9f.bf3e74","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC3","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC3. \n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.499390%2C-0.164836%3B51.498905%2C-0.163874&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.KC3gas = {\"NO2KC3\": parseInt(no2), \"TSGAS\": ts};\n        return msg;\n    }\n}\n\n","outputs":"1","noerr":0,"x":534,"y":807,"wires":[["b667fbd4.571c18"]]},{"id":"1062a53b.bb40ab","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC3","method":"use","ret":"txt","url":"","x":349,"y":803,"wires":[["79bc2d9f.bf3e74"]]},{"id":"630a7de0.6a8784","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC5","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC5\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[3].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC4/StartDate=2016-04-13/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.KC5jam = {\"jamKC5\": jam, \"lattitudeKC5\": \"51.49019756\", \"longitudeKC5\": \"-0.190863311\", \"TSJAM\": ts};\nreturn msg;","outputs":1,"noerr":0,"x":925,"y":694.9100341796875,"wires":[["70c1ea0f.ddacd4"]]},{"id":"7137c9a9.5634e8","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC4","method":"GET","ret":"txt","url":"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.487714,-0.168917;51.487262,-0.167936&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0","x":718,"y":757,"wires":[["fd17676e.d29c18"]]},{"id":"fd17676e.d29c18","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC4","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC4\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[6].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC3/StartDate=2016-04-13/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.KC4jam = {\"jamKC4\": jam, \"lattitudeKC4\": \"51.48743685\", \"longitudeKC4\": \"-0.168397129\", \"TSJAM\": ts};\nreturn msg;\n","outputs":1,"noerr":0,"x":924,"y":755,"wires":[["1062a53b.bb40ab"]]},{"id":"b667fbd4.571c18","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC3","method":"use","ret":"txt","url":"","x":721,"y":808,"wires":[["90eb3503.9582e8"]]},{"id":"90eb3503.9582e8","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC3","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC3\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[0].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.KC3jam = {\"jamKC3\": jam, \"lattitudeKC3\": \"51.49913951\", \"longitudeKC3\": \"-0.164337605\", \"TSJAM\": ts};\nreturn msg;\n","outputs":1,"noerr":0,"x":928,"y":807,"wires":[["cdcbe792.737648"]]},{"id":"a12e8fbc.426fd","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"payload","x":928,"y":1150.469970703125,"wires":[]},{"id":"71de1ae8.7c08d4","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC5","method":"use","ret":"txt","url":"","x":713,"y":696,"wires":[["630a7de0.6a8784"]]},{"id":"b15b16d0.2101d8","type":"function","z":"d6ce74ca.a72a38","name":"Extract timestamp","func":"/* \n** This code extracts the timestamp from the polling node to be \n** used as Time Class in the Predictive Analysis.\n** It also initiates the parameters for the London Air API request. \n*/\n\nvar ts = msg.payload;\nvar tsParsed = JSON.parse(ts);\n\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC5/StartDate=2016-04-14/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.timestamp = {\"timestamp\": tsParsed};\nreturn msg;","outputs":1,"noerr":0,"x":132.5,"y":698,"wires":[["4928dc1f.bc6dd4"]]},{"id":"60563556.abfbcc","type":"inject","z":"d6ce74ca.a72a38","name":"polling","topic":"","payload":"","payloadType":"date","repeat":"900","crontab":"","once":false,"x":100,"y":644,"wires":[["b15b16d0.2101d8"]]},{"id":"cdcbe792.737648","type":"function","z":"d6ce74ca.a72a38","name":"KC5 Object Creator","func":"/* \n** This code creates an object for each location based on \n** Location and Time of the Day to poll the Predictive Analysis API.\n** It also assigns a class to the Jam Factor ranges\n** It creates a Prediction object to be used as the final output\n*/\n\n//Retrieve NO2 readings for each location\nvar NO2KC5 = msg.KC5gas.NO2KC5;\n\n//Retrieve traffic jam readings for each location\n\nvar jamKC5 = getJamKC5();\n\n//Assigning a Class to the Jam factor\nfunction getJamKC5(){\n    var gas;\n    var dgas = msg.KC5jam.jamKC5;\n    if (dgas >=0 && dgas< 2){\n        gas = 1;\n        return gas;\n    } else if(dgas >=2 && dgas< 3.5) {\n        gas = 2;\n        return gas;\n    }else if(dgas >=3.5 && dgas< 5.5) {\n        gas = 3;\n        return gas;\n    }else if(dgas >=5.5 && dgas< 7.5) {\n        gas = 4;\n        return gas;\n    }else if(dgas >=7.5 && dgas<= 9) {\n        gas = 5;\n        return gas;\n    }\n};\nvar ts = msg.timestamp.timestamp;\nvar adate = new Date(ts);\nvar ts = adate.getHours();\nvar date = String(adate);\ndate = date.replace('T', ' ');\ndate = date.split(/[.]/)[0];\n\n//Predictive Analysis API Request\nmsg.url = \"https://palbyp.pmservice.ibmcloud.com/pm/v1/score/jam?accesskey=fsXngZpDJkE8WfwaoNmblXj0HkbyI2vZED+Uw1c8f+ajeYDZuRjyzm8IEOBXo3UJHxGxQ3pIogjgEOjN0TGDTcL0h32gVzPkwMbmHXNpi+HI8Dj6hf79qIXlAlZL1yedpRf9aa9KscclsebhGAVr2p0OwJPE4v26mrO+98mzjfc=\";\nmsg.payload = {\n                \"tablename\":\"sdata3.xlsx\", \n                \"header\":[\"Location\", \"NO2\", \"Time\", \"JamFactor\"], \n                \"data\":[[5, NO2KC5, ts, 1]]\n            };\nmsg.method = \"POST\";\nmsg.headers = \"\";\n\n//Building the Prediction object for later use\n\nvar positionKC5 = msg.KC5jam.lattitudeKC5+\",\"+ msg.KC5jam.longitudeKC5;\nmsg.prediction = {\n    \"KC5\":{\n        \"locNum\": 5, \"lat\":msg.KC5jam.lattitudeKC5, \"lon\":msg.KC5jam.longitudeKC5, \"position\":positionKC5, \"timestamp\": msg.timestamp.timestamp, \"date\": date, \"timeClass\": ts, \"NO2\": NO2KC5, \"predictedJam\":\"\",\"measuredJam\": jamKC5, \"confidence\": \"\", \"reroute\":\"none\", \"redirectpos\": \"\"\n    },\n    \"KC4\":{\n        \"locNum\": 4, \"lat\":\"\", \"lon\":\"\", \"position\":\"\", \"timestamp\": msg.timestamp.timestamp, \"date\": date, \"timeClass\": ts, \"NO2\": \"\", \"predictedJam\":\"\",\"measuredJam\": \"\",\"confidence\": \"\", \"reroute\":\"none\", \"redirectpos\": \"\"\n    },\n    \"KC3\":{\n        \"locNum\": 3, \"lat\":\"\", \"lon\":\"\", \"position\":\"\", \"timestamp\": msg.timestamp.timestamp, \"date\": date, \"timeClass\": ts, \"NO2\": \"\", \"predictedJam\":\"\",\"measuredJam\": \"\",\"confidence\": \"\", \"reroute\":\"none\", \"redirectpos\": \"\"\n    }\n};\n\n\nreturn msg;","outputs":1,"noerr":0,"x":132,"y":863,"wires":[["94beee7f.c56d"]]},{"id":"94beee7f.c56d","type":"http request","z":"d6ce74ca.a72a38","name":"IBM Prediction API","method":"use","ret":"txt","url":"","x":341.5,"y":866.989990234375,"wires":[["476c25b1.012a6c","d7f77834.596598"]]},{"id":"43e8010a.21787","type":"http request","z":"d6ce74ca.a72a38","name":"IBM Prediction API","method":"use","ret":"txt","url":"","x":337.5,"y":923.989990234375,"wires":[["bb887d5c.80259"]]},{"id":"6722d7ca.74a248","type":"function","z":"d6ce74ca.a72a38","name":"KC4 Object Creator","func":"/* \n** This code creates an object for each location based on \n** Location and Time of the Day to poll the Predictive Analysis API.\n** It also assigns a class to the Jam Factor ranges\n** It builds upon the Prediction object to be used as the final output\n*/\n\n//Retrieve NO2 readings for each location\n\nvar NO2KC4 = msg.KC4gas.NO2KC4;\n\n//Retrieve traffic jam readings for each location\n\nvar jamKC4 = getJamKC4();\n\n//Assigning a Class to the Jam factor\n\nfunction getJamKC4(){\n    var gas;\n    var dgas = msg.KC4jam.jamKC4;\n    if (dgas >=0 && dgas< 2){\n        gas = 1;\n        return gas;\n    } else if(dgas >=2 && dgas< 3.5) {\n        gas = 2;\n        return gas;\n    }else if(dgas >=3.5 && dgas< 5.5) {\n        gas = 3;\n        return gas;\n    }else if(dgas >=5.5 && dgas< 7.5) {\n        gas = 4;\n        return gas;\n    }else if(dgas >=7.5 && dgas<= 9) {\n        gas = 5;\n        return gas;\n    }\n};\n\nfunction getJamKC4(){\n    var gas;\n    var dgas = msg.KC4jam.jamKC4;\n    if (dgas >=0 && dgas< 2){\n        gas = 1;\n        return gas;\n    } else if(dgas >=2 && dgas< 3.5) {\n        gas = 2;\n        return gas;\n    }else if(dgas >=3.5 && dgas< 5.5) {\n        gas = 3;\n        return gas;\n    }else if(dgas >=5.5 && dgas< 7.5) {\n        gas = 4;\n        return gas;\n    }else if(dgas >=7.5 && dgas<= 9) {\n        gas = 5;\n        return gas;\n    }\n};\n\nvar ts = msg.timestamp.timestamp;\nvar date = new Date(ts);\nvar ts = date.getHours();\n\n//Predictive Analysis API Request\nmsg.url = \"https://palbyp.pmservice.ibmcloud.com/pm/v1/score/jam?accesskey=fsXngZpDJkE8WfwaoNmblXj0HkbyI2vZED+Uw1c8f+ajeYDZuRjyzm8IEOBXo3UJHxGxQ3pIogjgEOjN0TGDTcL0h32gVzPkwMbmHXNpi+HI8Dj6hf79qIXlAlZL1yedpRf9aa9KscclsebhGAVr2p0OwJPE4v26mrO+98mzjfc=\";\nmsg.payload = {\n                \"tablename\":\"sdata3.xlsx\", \n                \"header\":[\"Location\", \"NO2\", \"Time\", \"JamFactor\"], \n                \"data\":[[4, NO2KC4, ts, 1]]\n            };\nmsg.method = \"POST\";\nmsg.headers = \"\";\nvar positionKC4 = msg.KC4jam.lattitudeKC4+','+msg.KC4jam.longitudeKC4;\n\n//Building upon the Prediction Object\nmsg.prediction.KC5.predictedJam = msg.KC5jamPrediction.factor;\nmsg.prediction.KC5.confidence = msg.KC5jamPrediction.confidence;\nmsg.prediction.KC4.locNum = 4;\nmsg.prediction.KC4.lat = msg.KC4jam.lattitudeKC4;\nmsg.prediction.KC4.lon = msg.KC4jam.longitudeKC4;\nmsg.prediction.KC4.timestamp = msg.timestamp.timestamp;\nmsg.prediction.KC4.timeClass = ts;\nmsg.prediction.KC4.NO2 = NO2KC4;\nmsg.prediction.KC4.position = positionKC4;\nmsg.prediction.KC4.measuredJam = jamKC4;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":120.5,"y":920.989990234375,"wires":[["43e8010a.21787"]]},{"id":"9d285dc5.b7fa9","type":"function","z":"d6ce74ca.a72a38","name":"KC3 Object Creator","func":"/* \n** This code creates an object for each location based on \n** Location and Time of the Day to poll the Predictive Analysis API.\n** It also assigns a class to the Jam Factor ranges\n** It builds upon the Prediction object to be used as the final output\n*/\n\n\n//Retrieve NO2 readings for each location\n\nvar NO2KC3 = msg.KC3gas.NO2KC3;\n\n//Retrieve traffic jam readings for each location\n\nvar jamKC3 = getJamKC3();\n\n//Assigning a Class to the Jam factor\nfunction getJamKC3(){\n    var gas;\n    var dgas = msg.KC3jam.jamKC3;\n    if (dgas >=0 && dgas< 2){\n        gas = 1;\n        return gas;\n    } else if(dgas >=2 && dgas< 3.5) {\n        gas = 2;\n        return gas;\n    }else if(dgas >=3.5 && dgas< 5.5) {\n        gas = 3;\n        return gas;\n    }else if(dgas >=5.5 && dgas< 7.5) {\n        gas = 4;\n        return gas;\n    }else if(dgas >=7.5 && dgas<= 9) {\n        gas = 5;\n        return gas;\n    }\n};\n\n\nvar ts = msg.timestamp.timestamp;\nvar date = new Date(ts);\nvar ts = date.getHours();\n\n//Predictive API Request\nmsg.url = \"https://palbyp.pmservice.ibmcloud.com/pm/v1/score/jam?accesskey=fsXngZpDJkE8WfwaoNmblXj0HkbyI2vZED+Uw1c8f+ajeYDZuRjyzm8IEOBXo3UJHxGxQ3pIogjgEOjN0TGDTcL0h32gVzPkwMbmHXNpi+HI8Dj6hf79qIXlAlZL1yedpRf9aa9KscclsebhGAVr2p0OwJPE4v26mrO+98mzjfc=\";\nmsg.payload = {\n                \"tablename\":\"sdata3.xlsx\", \n                \"header\":[\"Location\", \"NO2\", \"Time\", \"JamFactor\"], \n                \"data\":[[3, NO2KC3, ts, 1]]\n            };\nmsg.method = \"POST\";\nmsg.headers = \"\";\nvar positionKC3 = msg.KC3jam.lattitudeKC3+','+msg.KC3jam.longitudeKC3;\n\n//Building upon the Prediction Object\nmsg.prediction.KC4.predictedJam = msg.KC4jamPrediction.factor;\nmsg.prediction.KC4.confidence = msg.KC4jamPrediction.confidence;\nmsg.prediction.KC3.lat = msg.KC3jam.lattitudeKC3;\nmsg.prediction.KC3.lon = msg.KC3jam.longitudeKC3;\nmsg.prediction.KC3.timestamp = msg.timestamp.timestamp;\nmsg.prediction.KC3.timeClass = ts;\nmsg.prediction.KC3.NO2 = NO2KC3;\nmsg.prediction.KC3.position = positionKC3;\nmsg.prediction.KC3.measuredJam = jamKC3;\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":118.5,"y":978.989990234375,"wires":[["93561b64.6de788"]]},{"id":"93561b64.6de788","type":"http request","z":"d6ce74ca.a72a38","name":"IBM Prediction API","method":"use","ret":"txt","url":"","x":336.5,"y":978.989990234375,"wires":[["6302e991.80c1c8"]]},{"id":"476c25b1.012a6c","type":"function","z":"d6ce74ca.a72a38","name":"Prediction Extraction","func":"/*\n** This code extract the predicted Jam Factor and Confidence level\n*/\nvar body = JSON.parse(msg.payload);\nvar aconfidence = body[0].data[0][5];\nvar confidence = parseFloat(aconfidence);\nconfidence = confidence.toFixed(3);\nmsg.KC5jamPrediction = {\"factor\":body[0].data[0][4], \"confidence\":confidence};\nreturn msg;","outputs":1,"noerr":0,"x":551.5,"y":863,"wires":[["6722d7ca.74a248"]]},{"id":"eb9dabe3.f3e238","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"payload.KC3.position","x":883.5,"y":1237,"wires":[]},{"id":"bb887d5c.80259","type":"function","z":"d6ce74ca.a72a38","name":"Prediction Extraction","func":"/*\n** This code extract the predicted Jam Factor and Confidence level\n*/\nvar body = JSON.parse(msg.payload);\nvar aconfidence = body[0].data[0][5];\nvar confidence = parseFloat(aconfidence);\nconfidence = confidence.toFixed(3);\nmsg.KC4jamPrediction = {\"factor\":body[0].data[0][4], \"confidence\":confidence};\nreturn msg;","outputs":1,"noerr":0,"x":534,"y":930,"wires":[["9d285dc5.b7fa9"]]},{"id":"6302e991.80c1c8","type":"function","z":"d6ce74ca.a72a38","name":"Prediction Extraction","func":"/*\n** This code extract the predicted Jam Factor and Confidence level\n*/\nvar body = JSON.parse(msg.payload);\nvar aconfidence = body[0].data[0][5];\nvar confidence = parseFloat(aconfidence);\nvar confidence = confidence.toFixed(3);\nvar prediction = {\"factor\":body[0].data[0][4], \"confidence\":confidence};\nif (prediction.factor == null){\n    //The Predictive analysis had a small bug with KC3 location when receiving low NO2 values.\n    //This piece of code allows for the system to continue working with some hardcoded values.\n    msg.prediction.KC3.predictedJam = 2;\n    msg.prediction.KC3.confidence = 0.001;\n}else{\n    msg.prediction.KC3.predictedJam = prediction.factor;\n    msg.prediction.KC3.confidence = prediction.confidence;\n}\nreturn msg;","outputs":1,"noerr":0,"x":544,"y":981,"wires":[["3cbd7b61.52cec4"]]},{"id":"3cbd7b61.52cec4","type":"function","z":"d6ce74ca.a72a38","name":"Routing Algorithm","func":"/**\n * This code develops a routing algorithm based on the predicted Jam factor received for each location\n * It stores each location in one of the following array:\n **/\n\nvar jam5 = msg.prediction.KC5.predictedJam;\nvar jam4 = msg.prediction.KC4.predictedJam;\nvar jam3 = msg.prediction.KC3.predictedJam;\nvar predictions = {\"KC5\":jam5,\"KC4\":jam4, \"KC3\":jam3};\n\nvar lowerThanThree = [];\nvar biggerThanThree = [];\nvar equalsThree = [];\nvar random = Math.round(Math.random());\n\nfor (var key in predictions) {\n      if (predictions[key] < 3) {\n        lowerThanThree.push(key);\n      }\n      else if (predictions[key] > 3) {\n        biggerThanThree.push(key);\n      }\n      else if (predictions[key] == 3){\n        equalsThree.push(key);\n      }\n}\n\n//ALL EQUAL\n\nif (predictions.KC5 == predictions.KC4 && predictions.KC4 == predictions.KC3){\n    console.log(\"no redirection\");\n}\n//ALL UNDER 3\nelse if (lowerThanThree.length == 3){\n    console.log(\"no redirection\");\n}\n// 2 Equal 3 and 1 above 3 (RANDOM)\nelse if (equalsThree.length == 2 && biggerThanThree.length == 1){\n    if (biggerThanThree[0] == 4){\n        console.log(\"no redirection\");\n    }else{\n        console.log(biggerThanThree[0] + ' redirects to ' + equalsThree[random]);\n        msg.prediction[biggerThanThree[0]].reroute = equalsThree[random];\n        msg.prediction[biggerThanThree[0]].redirectpos = msg.prediction[equalsThree[random]].position;\n    }\n}\n\n// 2 Equal 3 and 1 below 3 (RANDOM)\nelse if (equalsThree.length == 2 && lowerThanThree.length == 1){\n    if (lowerThanThree[0] == 2){\n        console.log(\"no redirection\");\n    }else{\n        console.log(equalsThree[random] + ' redirects to ' + lowerThanThree[0]);\n        msg.prediction[equalsThree[random]].reroute = lowerThanThree[0];\n        msg.prediction[equalsThree[random]].redirectpos = msg.prediction[lowerThanThree[0]].position;\n    }\n}\n\n//2 Below 3 and 1 equals 3\nelse if (lowerThanThree.length == 2 && equalsThree.length == 1){\n    if (predictions[lowerThanThree[0]] == 2 && predictions[lowerThanThree[1]] == 2){\n        console.log(\"no redirection\");\n    }\n    else if (predictions[lowerThanThree[0]] == 1 && predictions[lowerThanThree[1]] == 1){\n        console.log(equalsThree[0] + \" redirects to \" + lowerThanThree[0]);\n        msg.prediction[equalsThree[0]].reroute = lowerThanThree[0];\n        msg.prediction[equalsThree[0]].redirectpos = msg.prediction[lowerThanThree[0]].position;\n    }\n    else {\n        if (predictions[lowerThanThree[0]] < predictions[lowerThanThree[1]]){\n            console.log(equalsThree[0] + \" redirects to \" + lowerThanThree[0]);\n            msg.prediction[equalsThree[0]].reroute = lowerThanThree[0];\n            msg.prediction[equalsThree[0]].redirectpos = msg.prediction[lowerThanThree[0]].position;\n        }\n        else if (predictions[lowerThanThree[1]] < predictions[lowerThanThree[0]]){\n            console.log(equalsThree[0] + \" redirects to \" + lowerThanThree[1]);\n            msg.prediction[equalsThree[0]].reroute = lowerThanThree[1];\n            msg.prediction[equalsThree[0]].redirectpos = msg.prediction[lowerThanThree[1]].position;\n        }\n    }\n}\n//2 Below 3 and 1 above 3 ( RANDOM )\nelse if (lowerThanThree.length == 2 && biggerThanThree.length == 1){\n    console.log(biggerThanThree[0] + ' redirects to ' + lowerThanThree[random]);\n    msg.prediction[biggerThanThree[0]].reroute = lowerThanThree[random];\n    msg.prediction[biggerThanThree[0]].redirectpos = msg.prediction[lowerThanThree[random]].position;\n}\n\n// 2 Above 3 and 1 Below 3\nelse if (biggerThanThree.length == 2 && lowerThanThree.length == 1){\n    console.log(biggerThanThree[random] + ' redirects to ' + lowerThanThree[0]);\n    msg.prediction[biggerThanThree[random]].reroute = lowerThanThree[0];\n    msg.prediction[biggerThanThree[random]].redirectpos = msg.prediction[lowerThanThree[0]].position;\n}\n\n// 2 Above 3 and 1 Equals 3\nelse if (biggerThanThree.length == 2 && equalsThree.length == 1){\n    if (predictions[biggerThanThree[0]] == predictions[biggerThanThree[1]] && predictions[biggerThanThree[1]] == 4){\n        console.log(\"no redirection\");\n    }\n    else if (predictions[biggerThanThree[0]] == predictions[biggerThanThree[1]] && predictions[biggerThanThree[1]] == 5){\n        console.log(biggerThanThree[random] + ' redirects to ' + equalsThree[0]);\n        msg.prediction[biggerThanThree[random]].reroute = equalsThree[0];\n        msg.prediction[biggerThanThree[random]].redirectpos = msg.prediction[equalsThree[0]].position;\n    }\n    else if (predictions[biggerThanThree[0]] > predictions[biggerThanThree[1]]){\n        console.log(biggerThanThree[0] + ' redirects to ' + equalsThree[0]);\n        msg.prediction[biggerThanThree[0]].reroute = equalsThree[0];\n        msg.prediction[biggerThanThree[0]].redirectpos = msg.prediction[equalsThree[0]].position;\n    }\n    else if (predictions[biggerThanThree[1]] > predictions[biggerThanThree[0]]){\n        console.log(biggerThanThree[1] + ' redirects to ' + equalsThree[0]);\n        msg.prediction[biggerThanThree[1]].reroute = equalsThree[0];\n        msg.prediction[biggerThanThree[1]].redirectpos = msg.prediction[equalsThree[0]].position;\n\n    }\n}\n\n// 1 Below 3, 1 Equals 3, 1 Above 3\nelse if (biggerThanThree.length == 1 && equalsThree.length == 1 && lowerThanThree.length == 1){\n    console.log(biggerThanThree[0] + ' redirects to ' + lowerThanThree[0]);\n    msg.prediction[biggerThanThree[0]].reroute = lowerThanThree[0];\n    msg.prediction[biggerThanThree[0]].redirectpos = msg.prediction[lowerThanThree[0]].position;\n}\nmsg.url = \"https://traffair.firebaseio.com/data.json\";\nmsg.method = \"POST\";\nmsg.headers = \"\";\nmsg.payload = msg.prediction;\n\nreturn msg;","outputs":1,"noerr":0,"x":117.5,"y":1073,"wires":[["8984b0e1.6d56b","a2789808.5ca7a8","12cd15b5.5c387a","95248dbe.46d89","6044b4db.b27a1c","36e2d91c.91aa76"]]},{"id":"a2789808.5ca7a8","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"prediction","x":405.5,"y":1072,"wires":[]},{"id":"e100d264.16228","type":"comment","z":"d6ce74ca.a72a38","name":"Prediction Model","info":"","x":96,"y":606,"wires":[]},{"id":"8984b0e1.6d56b","type":"http request","z":"d6ce74ca.a72a38","name":"Firebase","method":"use","ret":"txt","url":"","x":395.5,"y":1169,"wires":[["959a592e.9e1bd8"]]},{"id":"959a592e.9e1bd8","type":"http response","z":"d6ce74ca.a72a38","name":"","x":572.5,"y":1171,"wires":[]},{"id":"c46cb5bc.159f68","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC4","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC4. \n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.487714,-0.168917;51.487262,-0.167936&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.gas = {\"location\": \"KC4\",\"NO2\": no2, \"TSGAS\": ts};\n        return msg;\n    }\n}\n\n","outputs":"1","noerr":0,"x":536,"y":250,"wires":[["5f3bffbe.03fde"]]},{"id":"d23f6ab6.abdf78","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC4","method":"use","ret":"txt","url":"","x":349,"y":254,"wires":[["c46cb5bc.159f68"]]},{"id":"6fc18a84.044734","type":"inject","z":"d6ce74ca.a72a38","name":"polling","topic":"","payload":"","payloadType":"date","repeat":"900","crontab":"","once":false,"x":85,"y":126,"wires":[["c49a4e03.8091c","99117c74.11311","a16a02e5.abe63"]]},{"id":"4288c539.c0ddbc","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC5","method":"use","ret":"txt","url":"","x":343,"y":196,"wires":[["11818e7b.6a7692"]]},{"id":"11818e7b.6a7692","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC5","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC5. \n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.492384%2C%20-0.193234%3B51.491912%2C%20-0.192263&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.gas = {\"location\": \"KC5\",\"NO2\": no2, \"TSGAS\": ts};\n        return msg;\n    }\n}\n","outputs":"1","noerr":0,"x":526,"y":194,"wires":[["badcfe16.c90af"]]},{"id":"33a19ae2.6091e6","type":"function","z":"d6ce74ca.a72a38","name":"NO2 KC3","func":"/* \n** This code extracts the NO2 value from the London Air API request.\n** It also initiates the parameters for the HERE Traffic API request for location KC3. \n*/\n\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar data = bodyParsed.AirQualityData.Data;\nvar i = data.length - 1;\nvar no2;\nvar ts;\nwhile (i > 0) {\n    var value = data[i][\"@Value\"];\n    var speciesCode = data[i][\"@SpeciesCode\"];\n    if(value == ''){\n        i--;\n    }else if(value != '' && speciesCode == 'NO2'){\n        no2 = data[i][\"@Value\"];\n        ts = data[i][\"@MeasurementDateGMT\"];\n        msg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.499390%2C-0.164836%3B51.498905%2C-0.163874&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\n        msg.method = \"GET\";\n        msg.headers = \"\";\n        msg.gas = {\"location\": \"KC3\",\"NO2\": no2, \"TSGAS\": ts};\n        return msg;\n    }\n}\n\n","outputs":"1","noerr":0,"x":537,"y":309,"wires":[["4e932f5f.6fd3b"]]},{"id":"e36675fd.1702a8","type":"http request","z":"d6ce74ca.a72a38","name":"London API KC3","method":"use","ret":"txt","url":"","x":351,"y":306,"wires":[["33a19ae2.6091e6"]]},{"id":"472b4bcb.94f804","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC5","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC5\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[3].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.jam = {\"jam\": jam.toString(), \"lattitude\": \"51.49019756\", \"longitude\": \"-0.190863311\", \"TSJAM\": ts};\nreturn msg;","outputs":1,"noerr":0,"x":915,"y":176.91000366210938,"wires":[["72e7fc2b.0b5634"]]},{"id":"5f3bffbe.03fde","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC4","method":"GET","ret":"txt","url":"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.487714,-0.168917;51.487262,-0.167936&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0","x":759,"y":262,"wires":[["7970c1ff.8d9fd"]]},{"id":"7970c1ff.8d9fd","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC4","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC4\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[6].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.jam = {\"jam\": jam.toString(), \"lattitude\": \"51.48743685\", \"longitude\": \"-0.168397129\", \"TSJAM\": ts};\nreturn msg;\n","outputs":1,"noerr":0,"x":971,"y":265,"wires":[["72e7fc2b.0b5634"]]},{"id":"4e932f5f.6fd3b","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC3","method":"use","ret":"txt","url":"","x":766,"y":317,"wires":[["d093d662.2f5068"]]},{"id":"d093d662.2f5068","type":"function","z":"d6ce74ca.a72a38","name":"JAM Factor KC3","func":"/* \n** This code extracts the Jam Factor from the HERE Traffic API for location KC3\n*/\nvar body = msg.payload;\nvar bodyParsed = JSON.parse(body);\nvar jam = bodyParsed.RWS[0].RW[0].FIS[0].FI[1].CF[0].JF;\nvar ts = bodyParsed.CREATED_TIMESTAMP;\nmsg.jam = {\"jam\": jam.toString(), \"lattitude\": \"51.49913951\", \"longitude\": \"-0.164337605\", \"TSJAM\": ts};\nreturn msg;\n","outputs":1,"noerr":0,"x":975,"y":314,"wires":[["72e7fc2b.0b5634"]]},{"id":"72e7fc2b.0b5634","type":"function","z":"d6ce74ca.a72a38","name":"Object Creator","func":"/* \n** This code creates a JSON object based on the retrieve information \n** for each location to be pushed in Cloudant Database everytime the polling mechanism is launched\n*/\nmsg = {\n        \"location\": msg.gas.location,\n        \"NO2Level\": msg.gas.NO2,\n        \"TSGAS\": msg.gas.TSGAS,\n        \"JamFactor\": msg.jam.jam,\n        \"TSJAM\": msg.jam.TSJAM,\n        \"lat\": msg.jam.lattitude,\n        \"lon\":msg.jam.longitude,\n        \"ts\": msg.timestamp.timestamp\n    }\nreturn msg;","outputs":1,"noerr":0,"x":289,"y":469.010009765625,"wires":[["ccde6ef9.0bd0b","6e6a2866.714358"]]},{"id":"ccde6ef9.0bd0b","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"true","x":467,"y":463.4700012207031,"wires":[]},{"id":"badcfe16.c90af","type":"http request","z":"d6ce74ca.a72a38","name":"JAM Factor KC5","method":"use","ret":"txt","url":"","x":709,"y":178,"wires":[["472b4bcb.94f804"]]},{"id":"6e6a2866.714358","type":"cloudant out","z":"d6ce74ca.a72a38","name":"traffair","cloudant":"","database":"traffic2","service":"traffair-cloudantNoSQLDB","payonly":false,"operation":"insert","x":470.5,"y":518,"wires":[]},{"id":"c49a4e03.8091c","type":"function","z":"d6ce74ca.a72a38","name":"Extract timestamp","func":"/* \n** This code extracts the timestamp from the polling node to be \n** used as Time Class in the Predictive Analysis.\n** It also initiates the parameters for the London Air API request for location KC5. \n*/\nvar ts = msg.payload;\nvar tsParsed = JSON.parse(ts);\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC5/StartDate=2016-04-14/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.timestamp = {\"timestamp\": tsParsed.toString()};\nreturn msg;","outputs":1,"noerr":0,"x":140.5,"y":202,"wires":[["4288c539.c0ddbc","69faaba7.c164b4"]]},{"id":"99117c74.11311","type":"function","z":"d6ce74ca.a72a38","name":"Extract timestamp","func":"/* \n** This code extracts the timestamp from the polling node to be \n** used as Time Class in the Predictive Analysis.\n** It also initiates the parameters for the London Air API request for location K4. \n*/\nvar ts = msg.payload;\nvar tsParsed = JSON.parse(ts);\n\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC4/StartDate=2016-04-13/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.timestamp = {\"timestamp\": tsParsed.toString()};\nreturn msg;","outputs":1,"noerr":0,"x":144,"y":255,"wires":[["d23f6ab6.abdf78"]]},{"id":"a16a02e5.abe63","type":"function","z":"d6ce74ca.a72a38","name":"Extract timestamp","func":"/* \n** This code extracts the timestamp from the polling node to be \n** used as Time Class in the Predictive Analysis.\n** It also initiates the parameters for the London Air API request for location KC3. \n*/\nvar ts = msg.payload;\nvar tsParsed = JSON.parse(ts);\n\nmsg.url = \"http://api.erg.kcl.ac.uk/AirQuality/Data/Site/SiteCode=KC3/StartDate=2016-04-13/EndDate=2016-12-31/Json\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nmsg.timestamp = {\"timestamp\": tsParsed.toString()};\nreturn msg;","outputs":1,"noerr":0,"x":141,"y":298,"wires":[["e36675fd.1702a8"]]},{"id":"12cd15b5.5c387a","type":"function","z":"d6ce74ca.a72a38","name":"KC5 Extract","func":"var KC5Cloudant = msg.prediction.KC5;\nmsg = {\"location\": \"KC5\", \"NO2\": KC5Cloudant.NO2, \"JamPredicted\": KC5Cloudant.predictedJam, \"MeasuredJam\": KC5Cloudant.measuredJam,\"Date\": KC5Cloudant.date};\nreturn msg;","outputs":1,"noerr":0,"x":398,"y":1220,"wires":[[]]},{"id":"95248dbe.46d89","type":"function","z":"d6ce74ca.a72a38","name":"KC4 Extract","func":"var KC4Cloudant = msg.prediction.KC4;\nmsg = {\"location\": \"KC4\", \"NO2\": KC4Cloudant.NO2, \"JamPredicted\": KC4Cloudant.predictedJam, \"MeasuredJam\": KC4Cloudant.measuredJam, \"Date\": KC4Cloudant.date};\n\nreturn msg;","outputs":1,"noerr":0,"x":409.5,"y":1268,"wires":[[]]},{"id":"6044b4db.b27a1c","type":"function","z":"d6ce74ca.a72a38","name":"KC3 Extract","func":"var KC3Cloudant = msg.prediction.KC3;\nmsg = {\"location\": \"KC3\", \"NO2\": KC3Cloudant.NO2, \"JamPredicted\": KC3Cloudant.predictedJam, \"MeasuredJam\": KC3Cloudant.measuredJam,\"Date\": KC3Cloudant.date};\n\nreturn msg;","outputs":1,"noerr":0,"x":415.5,"y":1308,"wires":[[]]},{"id":"a6dd2cc9.d853e","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"true","x":957,"y":1380,"wires":[]},{"id":"abe2ae5a.73379","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"true","x":971.5,"y":1452,"wires":[]},{"id":"6444ab76.5575a4","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"true","x":1002.5,"y":1313,"wires":[]},{"id":"7f6324dd.8f5a9c","type":"cloudant out","z":"d6ce74ca.a72a38","name":"traffair-realtime","cloudant":"","database":"results","service":"traffair-cloudantNoSQLDB","payonly":false,"operation":"insert","x":643.5,"y":1242,"wires":[]},{"id":"36e2d91c.91aa76","type":"function","z":"d6ce74ca.a72a38","name":"Tweet Payload","func":"var data = msg.prediction;\nvar level5;\nvar level4;\nvar level3;\nvar redirect;\n\n//KC5\nif(msg.prediction.KC5.predictedJam == 1){\n    level5 = \"very low\";\n}\nelse if(msg.prediction.KC5.predictedJam == 2){\n    level5 = \"low\";\n}\nelse if(msg.prediction.KC5.predictedJam == 3){\n    level5 = \"medium\";\n}\nelse if(msg.prediction.KC5.predictedJam == 4){\n    level5 = \"high\";\n}\nelse if(msg.prediction.KC5.predictedJam == 5){\n    level5 = \"very high\";\n}\n//KC4\nif(msg.prediction.KC4.predictedJam == 1){\n    level4 = \"very low\";\n}\nelse if(msg.prediction.KC4.predictedJam == 2){\n    level4 = \"low\";\n}\nelse if(msg.prediction.KC4.predictedJam == 3){\n    level4 = \"medium\";\n}\nelse if(msg.prediction.KC4.predictedJam == 4){\n    level4 = \"high\";\n}\nelse if(msg.prediction.KC4.predictedJam == 5){\n    level4 = \"very high\";\n}\n\n//KC3\nif(msg.prediction.KC3.predictedJam == 1){\n    level3 = \"very low\";\n}\nelse if(msg.prediction.KC3.predictedJam == 2){\n    level3 = \"low\";\n}\nelse if(msg.prediction.KC3.predictedJam == 3){\n    level3 = \"medium\";\n}\nelse if(msg.prediction.KC3.predictedJam == 4){\n    level3 = \"high\";\n}\nelse if(msg.prediction.KC5.predictedJam == 5){\n    level3 = \"very high\";\n}\n\n//Redirect\nif(msg.prediction.KC5.reroute !== 'none'){\n    redirect = msg.prediction.KC5.reroute;\n} else if(msg.prediction.KC4.reroute !== 'none'){\n    redirect = msg.prediction.KC4.reroute;\n}else if(msg.prediction.KC3.reroute !== 'none'){\n    redirect = msg.prediction.KC3.reroute;\n}else{\n    redirect = \"none\";\n}\n\nvar message = \"[Traffic levels] KC5: \"+level5+\" | KC4: \"+ level4+\" | KC3: \"+level3+ \"-- Traffic redirected to \"+redirect;\nreturn msg;","outputs":1,"noerr":0,"x":401.5,"y":1122,"wires":[[]]},{"id":"5ed2acba.82ef44","type":"comment","z":"d6ce74ca.a72a38","name":"Data Gathering Model","info":"","x":114,"y":47,"wires":[]},{"id":"69faaba7.c164b4","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"false","x":288.5,"y":95,"wires":[]},{"id":"d7f77834.596598","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"false","x":772.5,"y":865,"wires":[]},{"id":"da6f4b26.f225f8","type":"ibmiot in","z":"d6ce74ca.a72a38","authentication":"apiKey","apiKey":"c3157995.4527e8","inputType":"evt","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"KC5 - Sensor","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":"","x":271.5,"y":643,"wires":[[]]},{"id":"3ed34491.831bac","type":"function","z":"d6ce74ca.a72a38","name":"Extract Sensor Data","func":"//This code is used to extract data from the sensor at location KC5\n//The sensor simulates the values generated from the London Air API at location KC5\n//To test, remove link from polling to \"extract timestamp\" and link this module to \"Jam Factor KC5\" node\nvar ts = \"\"+msg.payload.timestamp+\"000\";\nts = parseInt(ts);\nvar gas2 = Math.floor(Math.random() * 10) + 180;  \nvar gas = msg.payload.NO2;\nvar parsedgas = JSON.parse(JSON.stringify(gas));\n// var parsedgas = 200;\n\n//var parsedgas = gas.replace(\"r\", \" \");\n// var no2gas = parseInt(gas);\nmsg.KC5gas = {\"NO2KC5\": gas2, \"TSGAS\": \"2016-04-14 00:00:00\"};\nmsg.timestamp = {\"timestamp\": ts};\nmsg.url = \"http://traffic.cit.api.here.com/traffic/6.1/flow.json?bbox=51.492384%2C%20-0.193234%3B51.491912%2C%20-0.192263&app_code=LF2rQzknPWq9tYDFMdpZYA&app_id=htS1SFT6rB1WnI7TPkZ0\";\nmsg.method = \"GET\";\nmsg.headers = \"\";\nreturn msg;\n","outputs":1,"noerr":0,"x":485.5,"y":643,"wires":[["71de1ae8.7c08d4","ab7184e5.e8a258"]]},{"id":"ab7184e5.e8a258","type":"debug","z":"d6ce74ca.a72a38","name":"","active":true,"console":"false","complete":"KC5gas","x":666.5,"y":585,"wires":[]}]